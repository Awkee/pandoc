#!/bin/sh -e

WORKING=$(pwd)
REQUIRED=markdown2latex
THIS=${0##*/}

NEWLINE='
'
WRAPPER_ARGS=
WRAPPEE_ARGS=

err ()  { echo "$*"   | fold -s -w ${COLUMNS:-110} >&2; }
errn () { printf "$*" | fold -s -w ${COLUMNS:-110} >&2; }

# Portable which(1).
pathfind () {
    oldifs="$IFS"; IFS=':'
    for _p in $PATH; do
        if [ -x "$_p/$*" ] && [ -f "$_p/$*" ]; then
            IFS="$oldifs"
            return 0
        fi
    done
    IFS="$oldifs"
    return 1
}

for p in pandoc $REQUIRED; do
    pathfind $p || {
        err "You need '$p' to use this program!"
        exit 1
    }
done

# As a security measure refuse to proceed if mktemp is not available.
pathfind mktemp || { err "Couldn't find 'mktemp'; aborting."; exit 1;  }

trap 'exitcode=$?
      [ -z "$TEMPDIR" ] || rm -rf "$TEMPDIR"
      exit $exitcode' 0 1 2 3 13 15

TEMPDIR=
TEMPDIR="$(mktemp -d -t $THIS.XXXXXXXX)" || exit 1
readonly TEMPDIR

if ! markdown2latex "$@" -s -d >$TEMPDIR/output.tex 2>$TEMPDIR/log; then
    cat $TEMPDIR/log | sed -e 's/markdown2latex/markdown2pdf/g'
    exit 1
fi

outfile="$(sed -ne '/^OUTPUT=/ s/^OUTPUT=\(.*\)/\1/p' $TEMPDIR/log)"
if [ -f "$outfile" ]; then
    mv "$outfile" $TEMPDIR/output.tex
fi
infiles="$(sed -ne '/^INPUT=/ s/^INPUT=\(.*\)/\1/p' $TEMPDIR/LOG)"
infile="${infiles%%:*}"
infilebase="${infile%.*}"
defaultdest="${infilebase:-stdin}.pdf"
destname="${outfile:-$defaultdest}"

(
    cd $TEMPDIR
    if ! pdflatex -interaction=batchmode output.tex >/dev/null 2>&1; then
        err "LaTeX errors:"
        cat output.log | sed -ne '/^!/,/^ *$/p' >&2
        if grep -q "File \`ucs.sty' not found" output.log; then
            err "Please install the 'unicode' package from ctan.org."
        fi
        exit 1
    fi
)

is_target_exists=
if [ -f "$destname" ]; then
    is_target_exists=1
    mv "$destname" "$destname~" 
fi

mv -f $TEMPDIR/output.pdf "$destname"

errn "Created $destname"
[ -z "$is_target_exists" ] || {
    errn " (previous file has been backed up as $destname~)"
}
err .
