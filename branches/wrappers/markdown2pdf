#!/bin/sh
# converts markdown to latex, then uses latex to make a PDF

REQUIRED=pdflatex

THIS=${0##*/}

# Portable which(1).
pathfind () {
    ifs_save="$IFS"
    IFS=:
    for _p in $PATH; do
        if [ -x "$_p/$*" ] && [ -f "$_p/$*" ]; then
            IFS="$OLDIFS"
            return 0
        fi
    done
    IFS="$ifs_save"
    return 1
}

_iconv () {
    if [ -z "$ICONV_AVAIL" ] || pathfind iconv; then
	ICONV_AVAIL=yes
    fi

    if [ -z "$1" ]; then
	set --
    fi

    if [ "$ICONV_AVAIL" = "yes" ]; then
	iconv "$@"
    else
	cat "$1"
    fi
}

safein () {
    _iconv "$1" -t utf-8
}

safeout () {
    if [ -z "$1" ]; then
	_iconv -f utf-8
	return
    fi

    if [ -z "$2" ]; then
	src=${TMPDIR-/tmp}/${THIS}.$$
	dest="$1"
	trap "status=$?; rm -rf $src; exit $status" EXIT INT TERM
	_iconv -f utf-8 >$src
    else
	src="$1"
	dest="$2"
    fi

    is_target_exists=
    if [ -f "$dest" ]; then
	is_target_exists=1
	mv -f "$dest" "$dest~"
    fi

    mv -f "$src" "$dest"

    printf "Created $dest" >&2
    [ -z "$is_target_exists" ] || {
	printf " (previous file has been backed up as '$dest~')" >&2
    }
    echo >&2 .
}

for p in pandoc $REQUIRED; do
    pathfind $p || {
        echo >&2 "You need '$p' to use this program!"
        exit 1
    }
done

outfile=
while getopts o:h opt; do
    case $opt in
    o) outfile="$OPTARG" ;;
    h) echo >&2 "Usage: $THIS [-o output_file] [-h] [input_file]"; exit 2 ;;
    esac
done

shift $(($OPTIND - 1))

infile=
ignored=
while [ -n "$1" ]; do
    case "$1" in
    --)
	shift
	PANDOC_OPTS="$@"
	break ;;
    *)
	if [ -z "$infile" ]; then
	    infile="$1"
	else
	    ignored="$ignored$1"
	fi ;;
    esac
    shift
done

if [ -n "$ignored" ]; then
    echo >&2 "Excessive arguments '$ignored' will be ignored!"
fi

PANDOC_OPTS=${PANDOC_OPTS:+$PANDOC_OPTS}

if [ -n "$infile" ] && ! [ -f "$infile" ]; then
    echo >&2 "'$infile' not found"
    exit 1
fi

if [ -z "$outfile" ]; then
    if [ -n "$infile" ]; then
        outfile=${infile%.*}.pdf
    else
        outfile='stdin.pdf' # input is STDIN, since no argument given
    fi
fi

BASE=${outfile##*/}
BASE=${BASE%.*}

set -e

TEMP=${TMPDIR-/tmp}/markdown2pdf.$$
trap "status=$?; rm -rf $TEMP; exit $status" EXIT INT TERM
mkdir -p $TEMP

safein "$infile" | \
pandoc $PANDOC_OPTS -w latex -s | \
safeout >$TEMP/$BASE.tex && (
    cd $TEMP
    if ! pdflatex -interaction=batchmode $BASE.tex >/dev/null 2>&1; then
        echo >&2 "LaTeX errors:"
        sed -ne '/^!/,/^ *$/p' $BASE.log >&2
        exit 1
    fi
) || exit $?

safeout "$TEMP/$BASE.pdf" "$outfile"
