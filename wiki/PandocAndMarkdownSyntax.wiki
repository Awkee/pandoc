#summary Differences between pandoc syntax and standard markdown syntax.
#labels Phase-Design

= Extensions =

== Footnotes ==

See the description in README.

`--strict` mode here would be easy:  just exclude footnotes from definition of
block and inline.

== Reference links ==

Pandoc allows implicit reference links in either of two styles:

{{{
1. Here's my [link]
2. Here's my [link][]

[link]: linky.com
}}}

(In newer versions of Markdown.pl, I believe these are both supported as well.)


== Title blocks ==

See the description in README.

`--strict` mode easy:  just exclude from def of block.

== Box-style block quotes ==

See the description in README.

`--strict` mode easy:  just exclude from def of block.

== Inline LaTeX ==

See the description in README.

`--strict` mode easy:  just exclude from def of inline (and block?).

= Other differences =

== Lists ==

{{{
1.  First
2.  Second:
    -   Fee
    -   Fie
    -   Foe

3.  Third
}}}

Pandoc transforms this into a "compact list" (with no `<p>` tags
around "First", "Second", or "Third"), while markdown puts `<p>`
tags around "Second" and "Third" (but not "First"), because of
the blank space around "Third".  Pandoc follows a simple rule:
if the text is followed by a blank line, it is treated as a
paragraph.  Since "Second" is followed by a list, and not a blank
line, it isn't treated as a paragraph.  The fact that the list
is followed by a blank line is irrelevant. 

`--strict` mode harder here. Ideas?

Unlike standard markdown, Pandoc allows ordered list items to be
marked with single letters, instead of numbers.  So, for example,
this source yields a nested ordered list:

{{{
1.  First
2.  Second
    a.  Fee
    b.  Fie
3.  Third
}}}

`--strict` mode should be fairly easy here.

Pandoc also extends standard markdown in allowing list item markers
to be terminated by ')':

{{{
1)  First
2)  Second
    A)  Fee
    B)  Fie
3)  Third
}}}

`--strict` mode trivial here:  just make the definition of list terminator
conditional.

== Quotes in link titles ==

Standard markdown allows unescaped literal quotes in link titles, as
in 

{{{
[foo]: "bar "embedded" baz"
}}}

Pandoc requires all quotes within titles to be escaped:

{{{
[foo]: "bar \"embedded\" baz"
}}}

`--strict` mode here might take some work.

== Reference links ==

If there's no corresponding reference, an implicit reference link
will appear as regular bracketed text.  So, all of the following will
appear as `[link]` if there's no reference for `link`:

{{{
[link]
[link] []
[link][]
}}}

If you want `[link][]`, use a backslash escape: `\[link]\[]`.

`--strict` mode here would be somewhat difficult.  We'd have to store the original
text somehow, so that it could be recovered if no reference is found.  This might
require a change to the Pandoc data structure, which I'd be unhappy about.

== HTML blocks ==

While Markdown 1.0 leaves HTML blocks exactly as they
are, Pandoc treats text between HTML tags as markdown.  Thus, for
example, Pandoc will turn

{{{
<table>
       <tr>
           <td>*one*</td>
           <td>[a link](http://google.com)</td>
       </tr>
</table>
}}}

into

{{{
<table>
        <tr>
                <td><em>one</em></td>
                <td><a href="http://google.com">a link</a></td>
        </tr>

</table>
}}}

whereas Markdown 1.0 will preserve it as is.

There is one exception to this rule:  text between `<script>` and
`</script>` tags is not interpreted as markdown.  (Question:  Should
there be other exceptions, e.g. for CDATA?)

This departure from standard markdown should make it easier to mix
markdown with HTML block elements.  For example, one can surround
a block of markdown text with `<div>` tags without preventing it
from being interpreted as markdown.

`--strict` mode here would take some work. Not sure how to approach it.

== Block quotes and headers ==

Pandoc requires blank lines before block quotes and headers; Markdown.pl
does not.

`--strict` mode here is easy:  a couple of lines need to be changed.