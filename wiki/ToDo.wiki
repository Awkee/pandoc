#summary To-do list.

== Improvements ==

=== Tables ===

See this suggestion (and the whole thread):
http://six.pairlist.net/pipermail/markdown-discuss/2005-March/001097.html

Here's a proposal that draws on Fortin's ideas.  Support three kinds of
tables:

**Simple tables, one row per line:**
{{{
  left aligned   default aligned  right aligned  centered
  -------------  --------------- -------------- ----------
  one item       3                         44.0    Yes
  per line       4                          3.6     No

}}}
Note:  must end with a blank line.

**Multiline tables (rows may be more than one line):**
{{{
  -------------------------------------------------------------
   Table    Column                  Single-                       
   syntax   separator  Font choice  column   Comment              
  --------  ---------  -----------  -------  ------------------
     A      Pipe       Any font     Yes      Somewhat cluttered   
            (`|`)                            but always work.     
  
     B      Character  Monospace    Yes      Currently my         
            count                            favorite.            
 
     C      Character  Monospace    Yes      Lazier than B and    
            count                            less pretty.         

     D      Character  Monospace    No       No single-column     
            count                            table and may be a   
                                             little confusing     
                                             with header syntax.  
  --------------------------------------------------------------
}}}
Notes:  Headers are treated as in simple tables, but the header
must be preceded by a line of ---'s.  This can be broken up, as 
in
{{{
  --------  ---------  -----------  -------  ------------------
   Table    Column                  Single-                       
   syntax   separator  Font choice  column   Comment              
  --------  ---------  -----------  -------  ------------------
}}}
A similar line of dashes must end the table.  Table rows may use
any number of lines; they are separated by one or more blank lines.

**Ascii tables:**
{{{
+------------------------+------------+----------+----------+
| Header row, column 1   | Header 2   | Header 3 | Header 4 |
+------------------------+------------+----------+----------+
| body row 1, column 1   | column 2   | column 3 | column 4 |
| and more col 1         |            |          | and more |
| and more               | and more   | and more |   col4   |
+------------------------+------------+----------+----------+
| body row 2             | Cells may s| pan colum|          |
+------------------------+------------+----------+----------+
}}}
These should also be supported as the most general table construct
(though they're a pain to write).  Unlike the other two types,
these can contain multiple blocks in a cell.

I don't like the use of pipe characters in simple tables; they
make tables harder to write and clutter up the appearance.  I
suspect they're used partly to make it easier for those who use
a proportional font.

=== Attributes ===

Add a way of specifying attributes?  See [http://six.pairlist.net/pipermail/markdown-discuss/2005-January/000960.html this thread].   Or, at least follow PHP Markdown Extra and allow ID attributes on headers.

=== Metadata ===

More flexible way of specifying metadata at beginning?
{{{
Title:   My title
Author:  JM
Author:  Q. Xargz
Date:    12 Dec 2007
Company: X Corp.
}}}
Or use RST's way, which is less likely to conflict with anything:
{{{
:Title:   My title
:Author:  JM
:Author:  Q. Xargz
:Date:    12 Dec 2007
:Company: X Corp.
}}}

=== Data structure ===

Consider changing the default Pandoc data structure so that it is more "hierarchical":
  * Instead of section heading blocks, it would have section blocks, each with a title and a list of other elements, which might in turn be sections.
  * It wouldn't be too hard to change the readers to parse this way.  And this would allow more flexibility for the writers, especially for the proposed Docbook writer, which needs a hierarchical structure of sections. 
  * Potential problem:  some existing code assumes e.g. that note blocks are at the outer level (see RTF writer); this would have to be rewritten.
  * It would be good to have a general "tree walker" utility function that makes it easy to, say, walk through the hierarchy filtering out note blocks.

=== Text.XHTML library ===

Use XHTML library for HTML writer?  Not yet - it's not standard with 6.4.2 (but is with 6.6).  When we can drop support for 6.4.2, we can use it.

=== Validation ===

Figure out whether S5 really needs the XHTML header.  If not, change to HTML for consistency.  Or, change pandoc's default header to XHTML.

Note that pandoc's HTML output fails to validate completely (w3c), either as HTML or as XHTML.
  * HTML doesn't like the `\>` at the end of `<meta>` tags.
  * But if we remove them, we'll have trouble with S5 output, which seems to need the xhtml header?
  * There's also a problem with the email obfuscation scheme. `<noscript>` isn't allowed inside `<p>` blocks.  `<script>` _is_ allowed!  This doesn't seem to be a practical problem with the browsers I've tried, but it would be nice to validate.  We could move to a different email obfuscation technique (see e.g. the nice idea at http://subversion.tigris.org/security.html), but this one allows us to have mailto links.

== New feature ideas ==

=== Configuration file ===

Add a configuration file for default options?

=== Table of contents ===

Add format-independent "table of contents" macro.  Something like this:
{{{
%contents
}}}
or (maruku)
{{{
{toc}
}}}
in a block by itself.  To implement this, we might add a 'TableOfContents'
block type.  In latex output, this would come out as `\tableofcontents`,
in HTML, Markdown, and RTF, we'd have to parse the document for headers
(or sections - see below) and build a nested list with internal links.
In RST, we could just use the existing contents directive. 

=== Acronyms ===

Acronyms?  Perhaps like this:
{{{
the [AAAS]

[AAAS]: acronym for "American association for the advancement of science"
}}}
yields
{{{
<acronym title="American association for the advancement of science">AAAS</acronym>
}}}

Or see PHP Markdown Extra on abbreviations.  That's a pretty nice system, I think.